<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shell Response</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      height: 100vh;
    }
    .container {
      background-color: #fff;
      padding: 10px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      flex: 1;
      display: flex;
      flex-direction: column;
      --margin: 10px;
    }
    .header {
      display: flex;
      align-items: center;
      --margin-bottom: 5px;
    }
    .status-indicator {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      margin-left: 10px;
      background-color: red;
    }
    .status-indicator.green {
      background-color: green;
    }
    textarea {
      width: 98%;
      flex: 1;
      padding: 5px;
      font-family: monospace;
      font-size: 11px;
      border: 1px solid #ccc;
      border-radius: 4px;
      resize: none;
    }
    button {
      margin-top: 5px;
      padding: 10px 20px;
      font-size: 12px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <div id="statusIndicator" class="status-indicator"></div>
      <h2>$(shellcommand)</h2>
    </div>
    <textarea id="response" readonly></textarea>
    <button id="breakButton">Stop Command</button>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const responseTextarea = document.getElementById("response");
      const breakButton = document.getElementById("breakButton");
      const statusIndicator = document.getElementById("statusIndicator");
      let intervalId = null;

      function fetchResponse() {
        fetch("/shellresponse")
          .then(response => {
            if (!response.ok) {
              return;
            }
            return response.text();
          })
          .then(data => {
            if (data) {
              responseTextarea.value += data + "\n";
              responseTextarea.scrollTop = responseTextarea.scrollHeight;
            }
          })
          .catch(() => {});
      }

      function checkStatus() {
        fetch("/shellrun")
          .then(response => {
            if (response.ok) {
              statusIndicator.classList.remove("green");
              statusIndicator.classList.add("green");
            } else {
              statusIndicator.classList.remove("green");
            }
          })
          .catch(() => {
            statusIndicator.classList.remove("green");
          });
      }

      function stopCommand() {
        fetch("/shellbreak")
          .then(response => {
            if (!response.ok) {
              throw new Error("Failed to stop command");
            }
            return response.text();
          })
          .then(data => {
            responseTextarea.value += "Command stopped: " + data + "\n";
          })
          .catch(error => {
            responseTextarea.value += "Error: " + error.message + "\n";
          });
      }

      intervalId = setInterval(fetchResponse, 500);
      setInterval(checkStatus, 500);

      breakButton.addEventListener("click", function () {
        stopCommand();
      });
    });
  </script>
</body>
</html>